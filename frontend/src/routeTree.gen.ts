/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as R404Import } from './routes/$404'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedSettingsImport } from './routes/_authenticated/settings'
import { Route as AuthenticatedMyDevspaceImport } from './routes/_authenticated/my-devspace'
import { Route as AuthenticatedProjectProjectIdImport } from './routes/_authenticated/project.$projectId'

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const R404Route = R404Import.update({
  id: '/$404',
  path: '/$404',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedSettingsRoute = AuthenticatedSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedMyDevspaceRoute = AuthenticatedMyDevspaceImport.update({
  id: '/my-devspace',
  path: '/my-devspace',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedProjectProjectIdRoute =
  AuthenticatedProjectProjectIdImport.update({
    id: '/project/$projectId',
    path: '/project/$projectId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$404': {
      id: '/$404'
      path: '/$404'
      fullPath: '/$404'
      preLoaderRoute: typeof R404Import
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/my-devspace': {
      id: '/_authenticated/my-devspace'
      path: '/my-devspace'
      fullPath: '/my-devspace'
      preLoaderRoute: typeof AuthenticatedMyDevspaceImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/project/$projectId': {
      id: '/_authenticated/project/$projectId'
      path: '/project/$projectId'
      fullPath: '/project/$projectId'
      preLoaderRoute: typeof AuthenticatedProjectProjectIdImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedMyDevspaceRoute: typeof AuthenticatedMyDevspaceRoute
  AuthenticatedSettingsRoute: typeof AuthenticatedSettingsRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedProjectProjectIdRoute: typeof AuthenticatedProjectProjectIdRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedMyDevspaceRoute: AuthenticatedMyDevspaceRoute,
  AuthenticatedSettingsRoute: AuthenticatedSettingsRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedProjectProjectIdRoute: AuthenticatedProjectProjectIdRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/$404': typeof R404Route
  '': typeof AuthenticatedRouteWithChildren
  '/my-devspace': typeof AuthenticatedMyDevspaceRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/': typeof AuthenticatedIndexRoute
  '/project/$projectId': typeof AuthenticatedProjectProjectIdRoute
}

export interface FileRoutesByTo {
  '/$404': typeof R404Route
  '/my-devspace': typeof AuthenticatedMyDevspaceRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/': typeof AuthenticatedIndexRoute
  '/project/$projectId': typeof AuthenticatedProjectProjectIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/$404': typeof R404Route
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_authenticated/my-devspace': typeof AuthenticatedMyDevspaceRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/project/$projectId': typeof AuthenticatedProjectProjectIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$404'
    | ''
    | '/my-devspace'
    | '/settings'
    | '/'
    | '/project/$projectId'
  fileRoutesByTo: FileRoutesByTo
  to: '/$404' | '/my-devspace' | '/settings' | '/' | '/project/$projectId'
  id:
    | '__root__'
    | '/$404'
    | '/_authenticated'
    | '/_authenticated/my-devspace'
    | '/_authenticated/settings'
    | '/_authenticated/'
    | '/_authenticated/project/$projectId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  R404Route: typeof R404Route
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  R404Route: R404Route,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/$404",
        "/_authenticated"
      ]
    },
    "/$404": {
      "filePath": "$404.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/my-devspace",
        "/_authenticated/settings",
        "/_authenticated/",
        "/_authenticated/project/$projectId"
      ]
    },
    "/_authenticated/my-devspace": {
      "filePath": "_authenticated/my-devspace.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/project/$projectId": {
      "filePath": "_authenticated/project.$projectId.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
